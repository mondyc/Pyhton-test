'''文件操作 文本'''

# 文件介绍

# 计算机的文件，就是存储在某种长期储存设备上的一段数据
# 作用:将数据长期保存下来，在需要的时候使用
# 1.计算机只认识二进制(0 1)
# 2.文件中存储的数据都是以二进制(0 1)的形式去存储的
# 可以根据文件中的二进制内容,能否使用记事本软件将其转换为文字，将文件
# 分为两种:文本文件和二进制文件

# 文本文件
#     能够使用记事本软件打开(能够使用记事本转换为文字)
#     txt，md，py，html，css，js，json
# 二进制文件
#     不能使用记事本软件打开的
#     oexe，mp3，mp4，jpg，png

# 文件操作的步骤
# 1、打开文件
# 2、读或者写文件
# 3、关闭文件

# 1、打开文件
# 打开文件:将文件从磁盘(硬盘)中读取到内存中
# 语法:
# open(file, mode='r', encoding=None)

# >参数 file:是要打开的文件，类型是字符串，文件的路径可以是相对路径,也可以是绝对路径(从根目录开始书写的路径)，建议使用相对路径(相对于当前代码文件所在的路径，./ ../ )
# >参数mode:默认参数(缺省参数)，表示的是打开文件的方式
#     > r: read只读打开
#     > w: write只写打开
#     > a> append追加打开,在文件的末尾写入内容
# >参数encoding:编码方式,(文字和二进制如何进行转换的)
#     > gbk:将一个汉字转换为2个字节二进制
#     > utf-8:常用，将一个汉字转换为3个字节的二进制
# >返回值:返回的是文件对象，后续对文件的操作，都需要这个对象

# 2、读或写文件
#     写文件
#     向文件中写入指定的内容
#     前提:文件的打开方式是w或者a
# 语法：
# 文件对象.write('写入文件的内容')
# 返回值:写入文件的字符数,一般不关注
# 注意：w 方式打开文件
# 1．文件不存在，会直接创建文件
# 2．文件存在，会覆盖原文件(将原文件中的内容清空)


#     读文件
#     将文件中的内容读取出来
#     前提:文件的打开方式需要是 r
# 语法：
# 文件对象.read(n)
# 参数 n 表示读取多少个字符，一般不写，表示读取全部内容
# 返回值：读取到文件内容，类型：字符串

# 3、关闭文件
# 关闭文件:将文件占用的资源进行清理，同时会保存文件，文件关闭之后，这个文件对象就不能使用了
# 文件对象.close()

# 案例：写文件

# # 打开文件
# f = open('a.txt','w',encoding='utf-8')
# # 写文件
# f.write('天天向上')
# f.write('好好学习')
# # 关闭文件
# f.close()

# # 案例：读取文件
# # 打开文件
# f = open('a.txt','r',encoding='utf-8')
# # 写文件
# buf = f.read()
# print(buf)
# # 关闭文件
# f.close()

print('-----------------------------------------------------------')

# 使用 with open 打开文件
# with open() 打开文件的好处:不用自己去书写关闭文件的代码，会自动进行关闭

# 语法：
# with open('a.txt','w',encoding='utf-8') as f:
#     # 在缩进中去读取或者写入文件

# 缩进中的代码执行结束,出缩进之后,文件会自动关闭

# 案例：
# with open('a.txt','a',encoding='utf-8') as f:
#     f.write('good good')

# a方式打开文件，文件不存在会创建文件，文件存在，作文件的末尾写入内容

print('-----------------------------------------------------------')

# 按行读取文件
# 按行读取文件:一次读取一行内容
# 语法：
# 文件对象.readline


# 案例1：
# with open('b.txt',encoding='utf-8') as f:
#     buf = f.readline() # 111
#     print(buf)
#     print(f.readline()) # 222

# 案例2：
# with open('b.txt', encoding='utf-8') as f:
#     for i in f: # 按行读取,读到文件末尾结束#
#         print(i, end="")

# 案例3：
# read()和readline()读到文件未尾,返回一个空字符串，即长度为0
with open('b.txt', encoding='utf-8') as f:
    while True:  # 按行读取,读到文件末尾结束#
        buf = f.readline()
        if len(buf) == 0:
            break
        else:
            print(buf, end="")

# 案例4：补充
# 在容器中，容器为空，即容器中的数据的个数为0，表示 False，其余情况都是True
with open(' b.txt ', encoding='utf-8') as f:
    while True:
        buf = f.readline()
        if buf:  # if len(buf) != 0
            print(buf)
        else:
            break
