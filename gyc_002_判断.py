'''if判断'''

# 语法：if结构

# if 判断条件:
#     书写条件成立，执行的代码
#     书写条件成立，执行的代码

# 1、if 是一个关键字，和后续的判断条件之间需要一个空格
# 2、判断条件后边需要一个冒号，不要少了
# 3、冒号之后，回车，代码需要缩进，在 pycharm 中会自动进行缩进，一般是4个空格或者一个 tab键
# 4、所有在 if 代码下方的缩进中书写的代码，属于 if 语句的代码块，判断条件为 True 的时候会执行
# 5、if 代码块中的代码，要么都执行，要么都不执行
# 6、if 代码块结束之后，代码要顶格书写（不再有缩进），表示和 if 无关的代码

age = input('输入年龄:')
if int(age) >= 18:  # 先类型转换，再比大小
    print('恭喜你可以进入网吧')
print('ono piece是真是存在的')

name = input('请输入你的用户名:')
if name == 'admin':
    print('恭喜你admin')

print('-----------------------------------------------------------')

# 语法：if else结构

# if 判断条件:
#     书写条件成立，执行的代码
#     书写条件成立，执行的代码
# else：
#     书写条件不成立，执行的代码

# 1、else是关键字，后边需要冒号
# 2、冒号之后回车，同样需要缩进
# 3、处于 else 代码下方缩进中的内容，属于else 的代码块
# 4、if 和 else 的代码块，只会执行其中的一个
# 5、else 需要结合 if 使用

age = input('输入年龄:')
if int(age) >= 18:
    print('恭喜你可以进入网吧')
else:
    print('滚回家去吧')

print('-----------------------------------------------------------')

# 语法：if elif else结构

# if 判断条件:
#     书写条件成立，执行的代码
# elif 判断条件n:
#     书写条件成立，执行的代码
# else:
#     书写条件不成立，执行的代码

# 1、elif 也是关键字，后边和判断条件之间需要一个空格，判断条件之后需要冒号
# 2、冒号之后回车需要缩进，处在这个缩进中的的代码表示是 elif 的代码块
# 3、在一个 if 判断中，可以有很多个 elif
# 4、只有 if 的条件不成立，才会去判断 elif
# 5、只要有一个条件成立后，后面的代码都不进行判断

chengji = int(input('请输入你的成绩：'))
if chengji >= 90:
    print('优')
elif chengji >= 80:  # and chengji < 90: “这个条件可以不写”
    print('良')
elif chengji >= 70:  # and chengji < 80: “这个条件可以不写”
    print('中')
else:
    print('差')

print('-----------------------------------------------------------')

# 语法：if嵌套
# if 判断条件:
#     书写条件成立，执行的代码
#     if 判断条件:
#         写条件成立，执行的代码
#     else:
#         书写条件不成立，执行的代码
# else:
#     书写条件不成立，执行的代码
#
# 是指在一个 if （elif else）中嵌套另一个 if

mima = int(input('请输入密码：'))
if mima == 123456:
    print('正确登录成功')
    jine = int(input('请输入金额：'))
    if jine <= 100:
        print('取款成功')
    else:
        print('余额不足')
else:
    print('密码错误')

# 需要随机数
# 导入随机函数
# import random 这行代码要习惯性的放在第一行
import random

name = random.randint(1, 3)  # 这个函数是可以渠道结束位置的3的
print(name)
