'''函数基础'''

# 函数就是具有独立功能的代码块，组织成一个小模块，需要的时候调用
# 对行代码写在一块，起个名字
# 函数必须先定义后使用
# 模仿登录
def denglu():
    print('输入用户名')
    print('输入密码')
    print('输入验证码')
    print('点击登录')

denglu()

print('-----------------------------------------------------------')

# 函数的定义
# def是关键字用来定义函数
# 含税明需要遵守标识符的规则
# 缩进中的代码称为函数体
# 函数定义的时候，函数体的代码不会执行，调用的时候才会执行

# 语法：
# def 函数名():
#     函数中的代码
#     函数中的代码

# 在前期书写不熟练的时候，可以先不写函数，然后再起名字，然后再给多行代码缩进

print('-----------------------------------------------------------')

# 函数的调用
# 函数调用的代码，要在写在函数体的外面

# 语法：
# 函数名()

print('-----------------------------------------------------------')

# 练习
def say_hello():
    print('hello 1')
    print('hello 2')
    print('hello 3')

say_hello()

print('-----------------------------------------------------------')

# 文档的注释
# 书写位置，在函数名的下面使用三对双引号的注释
# 作用：告诉别人这个函数如何使用
# 光标放在函数上 ctrl + Q 可以查看函数注释

def say_hello():
    """打印三个hello"""
    print('hello 1')
    print('hello 2')
    print('hello 3')

say_hello()

print('-----------------------------------------------------------')

# 函数的嵌套调用
# 函数定义不会执行函数体的中代码
# 函数调用会执行体中的代码
# 函数调用我完毕，会回到函数调用的地方，继续执行

def fanc1():
    print(1)
    print('hello 2')
    print('hello 3')

def fanc2():
    print(1)
    fanc1()
    print('hello 3')

fanc1()
fanc2()